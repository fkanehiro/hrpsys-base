// -*- coding:utf-8-unix; mode: idl; indent-tabs-mode: nil; c-basic-offset: 2; -*-
/**
 * @file ForwardKinematicsService.idl
 * @brief Services for the forward kinematics interface
 */
#include "BasicDataType.idl"

module OpenHRP
{
  interface ForwardKinematicsService
  {
    typedef double position[3];
    /** 
	@brief select a link its position of the actual model coincides with that of the reference model.
	@param linkname link name
	@return true if selected successfully, false otherwise
    */
    boolean selectBaseLink(in string linkname);

    /**
       @brief get link pose of the reference model. The reference model is computed from reference joint angles and reference position/orientation of the root link.
       @param linkname link name
       @param pose homogeneous matrix of the link in the global coordinates
       @return true if gotten successfully, false otherwise
    */
    boolean getReferencePose(in string linkname, out RTC::TimedDoubleSeq pose);

    /**
       @brief get link pose of the actual model. The actual model is computed from current joint angles.
       @param linkname link name
       @param pose homogeneous matrix of the link in the global coordinates
       @return true if gotten successfully, false otherwise
    */
    boolean getCurrentPose(in string linkname, out RTC::TimedDoubleSeq pose);

    /**
       @brief get current position of a point on a link expressed in the other link frame
       @param linknameFrom the result is computed w.r.t. this link
       @param linknameTo the point is fixed on this link
       @param target position of the point wrt linknameTo
       @param result relative position of the point
       @return true if gotten successfully, false otherwise
     */
    boolean getRelativeCurrentPosition(in string linknameFrom, in string linknameTo,
				       in position target,
				       out position result);
  };
};
